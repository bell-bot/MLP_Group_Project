data:
  corpus:
    name: "Tedlium" # Specify corpus
    ##HOME MACHINE##
    #path: "/home/wassim_jabrane/MLP_Group_Project/src/Data/TEDLIUM_release-3/legacy"
    ##ASR NETWORK##
    path: "/disk/scratch2/s1834237/TEDLIUM_release-3/legacy"
    train_split: ["train"] # Name of data splits to be used as training set
    dev_split: ["dev"] # Name of data splits to be used as validation set
    bucketing: True # Enable/Disable bucketing
    batch_size: 2
  audio: # Attributes of audio feature
    feat_type: "mfcc"
    feat_dim: 13
    frame_length: 25 # ms
    frame_shift: 10 # ms
    dither: 0 # random dither audio, 0: no dither
    apply_cmvn: True
    delta_order: 2 # 0: do nothing, 1: add delta, 2: add delta and accelerate
    delta_window_size: 2
  text:
    mode: "subword" # 'character'/'word'/'subword'
    vocab_file: "tests/sample_data/subword-16k.model"

hparas: # Experiment hyper-parameters
  #valid_step: 500
  valid_step: 50
  #max_step: 100001
  max_step: 10001
  tf_start: 1.0
  tf_end: 1.0
  #tf_step: 5000
  tf_step: 500
  optimizer: "Adadelta"
  lr: 1.0
  eps: 0.00001 # 1e-5
  lr_scheduler: "fixed" # 'fixed'/'warmup'
  curriculum: 0

model: # Model architecture
  ctc_weight: 0.0 # Weight for CTC loss
  encoder:
    prenet: "vgg" # 'vgg'/'cnn'/''
    # vgg: True                             # 4x reduction on time feature extraction
    module: "LSTM" # 'LSTM'/'GRU'/'Transformer'
    bidirection: True
    ##Smaller home machine
    ##dim: [32, 32]
   #STILL TOO BIG
   #dim: [512,512,512,512,512]
    dim: [128,128,128]
    dropout: [0,0,0]
    layer_norm: [False, False,False]
    proj: [True, True,True] # Linear projection + Tanh after each rnn layer
    sample_rate: [1, 1,1]
    sample_style: "drop" # 'drop'/'concat'
  attention:
    mode: "loc" # 'dot'/'loc'
    #dim: 300
    dim: 200
    num_head: 1
    v_proj: False # if False and num_head>1, encoder state will be duplicated for each head
    temperature: 0.5 # scaling factor for attention
    loc_kernel_size: 100 # just for mode=='loc'
    loc_kernel_num: 10 # just for mode=='loc'
  decoder:
    module: "LSTM" # 'LSTM'/'GRU'/'Transformer'
    dim: 256
    layer: 1
    dropout: 0
